// <auto-generated />
using System;
using GeolocationAPI.Infrastructure.DB.MSSQLExpress.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeolocationAPI.Infrastructure.DB.MSSQLExpress.Migrations
{
    [DbContext(typeof(GeolocationAPIDbContext))]
    [Migration("20250915165659_RemoveUnnecessaryColumns")]
    partial class RemoveUnnecessaryColumns
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GeolocationAPI.Infrastructure.DB.MSSQLExpress.Models.BatchProcessItemModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BatchProcessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProcessingTime")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ProssessedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BatchProcessId");

                    b.ToTable("BatchProcessItems");
                });

            modelBuilder.Entity("GeolocationAPI.Infrastructure.DB.MSSQLExpress.Models.BatchProcessModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ProcessingTime")
                        .HasColumnType("float");

                    b.Property<int>("RecordsProcessed")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BatchProcesses");
                });

            modelBuilder.Entity("GeolocationAPI.Infrastructure.DB.MSSQLExpress.Models.BatchProcessItemModel", b =>
                {
                    b.HasOne("GeolocationAPI.Infrastructure.DB.MSSQLExpress.Models.BatchProcessModel", "BatchProcess")
                        .WithMany("Items")
                        .HasForeignKey("BatchProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BatchProcess");
                });

            modelBuilder.Entity("GeolocationAPI.Infrastructure.DB.MSSQLExpress.Models.BatchProcessModel", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
